import { ImageResponse } from "@vercel/og";

const size = {
  width: 1200,
  height: 630,
};

export async function GET(req: Request) {
  try {
    const { searchParams } = new URL(req.url);
    const heading = searchParams.get("heading");
    return new ImageResponse(
      (
        <div
          style={{
            display: "flex",
            height: "100%",
            width: "100%",
            alignItems: "center",
            justifyContent: "center",
            flexDirection: "column",
            backgroundImage: "linear-gradient(to bottom, #dbf4ff, #fff1f1)",
            fontSize: 60,
            letterSpacing: -2,
            fontWeight: 700,
            textAlign: "center",
          }}
        >
          <svg
            width="100"
            height="100"
            viewBox="0 0 100 100"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <rect width="100" height="100" rx="20" fill="#CC0000" />
            <rect x="10" y="10" width="80" height="80" rx="20" fill="white" />
            <path
              d="M28.8488 31.8V31.24H32.8488L40.5688 44.42V45H36.5888L28.8488 31.8ZM36.7688 36.26V31.24H40.5688V42.76L36.7688 36.26ZM28.8488 33.46L32.6488 39.96V45H28.8488V33.46ZM43.1652 31.24H47.1652V45H43.1652V31.24ZM48.0052 37.66H48.4852C48.9119 37.66 49.2252 37.6467 49.4252 37.62C49.6386 37.58 49.8052 37.5 49.9252 37.38C50.0452 37.2733 50.1186 37.12 50.1452 36.92C50.1852 36.7067 50.2052 36.3933 50.2052 35.98C50.2052 35.5667 50.1852 35.26 50.1452 35.06C50.1186 34.8467 50.0452 34.68 49.9252 34.56C49.8052 34.4533 49.6386 34.3867 49.4252 34.36C49.2119 34.32 48.8986 34.3 48.4852 34.3H48.0052V31.24H49.6652C50.6519 31.24 51.4519 31.34 52.0652 31.54C52.6919 31.7267 53.1652 32.02 53.4852 32.42C53.7919 32.7933 53.9986 33.2667 54.1052 33.84C54.2119 34.4 54.2652 35.1133 54.2652 35.98C54.2652 36.8067 54.2119 37.4933 54.1052 38.04C54.0119 38.5867 53.8186 39.0467 53.5252 39.42C53.1919 39.8467 52.7119 40.1733 52.0852 40.4C51.4719 40.6133 50.6652 40.72 49.6652 40.72H48.0052V37.66ZM56.0559 31.84V31.24H59.7359L65.4959 43.48L64.8359 45H62.2359L56.0559 31.84ZM67.3559 39.22H67.2759L65.9359 42.46L64.2159 38.78L67.3559 31.24H71.1559V45H67.3559V39.22ZM56.0559 33.82L59.7359 41.66V45H56.0559V33.82ZM30.946 58.4C30.506 58.3467 29.7327 58.2733 28.626 58.18C28.0127 58.1533 27.5193 58.14 27.146 58.14C26.666 58.14 26.2127 58.1533 25.786 58.18V55.08H26.286C27.3793 55.08 28.5127 55.1533 29.686 55.3C30.0593 55.3533 30.4793 55.4267 30.946 55.52V58.4ZM27.646 64.94C27.646 64.66 27.626 64.46 27.586 64.34C27.546 64.2067 27.4793 64.12 27.386 64.08C27.2927 64.0267 27.1327 63.9867 26.906 63.96L24.446 63.66C22.9927 63.5 22.0127 63.0267 21.506 62.24C21.2793 61.9067 21.126 61.5 21.046 61.02C20.966 60.54 20.926 59.9533 20.926 59.26C20.926 57.78 21.306 56.7133 22.066 56.06C22.6793 55.5267 23.6393 55.2133 24.946 55.12V59.14C24.946 59.3133 24.9527 59.46 24.966 59.58C24.9793 59.7 25.006 59.7933 25.046 59.86C25.086 59.94 25.1527 60 25.246 60.04C25.3393 60.0667 25.4793 60.0867 25.666 60.1L28.426 60.44C28.9993 60.52 29.466 60.62 29.826 60.74C30.186 60.86 30.4927 61.0467 30.746 61.3C31.346 61.9267 31.646 63.04 31.646 64.64C31.646 66.3333 31.2727 67.52 30.526 68.2C30.1927 68.5067 29.786 68.7333 29.306 68.88C28.8393 69.0133 28.286 69.1 27.646 69.14V64.94ZM26.586 69.16C25.2527 69.16 24.0127 69.1 22.866 68.98C22.186 68.9133 21.6727 68.8467 21.326 68.78V65.86C22.1127 65.9267 23.0127 65.9933 24.026 66.06C24.666 66.0867 25.1193 66.1 25.386 66.1C26.106 66.1 26.5793 66.08 26.806 66.04V69.16H26.586ZM32.5921 55.24H43.8521V58.44H32.5921V55.24ZM36.2121 59.24H40.2121V69H36.2121V59.24ZM47.5548 55.24H47.8948L49.4748 60.72L47.1748 69H43.1748L47.5548 55.24ZM52.0548 66.56H48.7148L49.5548 63.48H51.1548L48.7948 55.24H52.4548L56.8348 69H52.7548L52.0548 66.56ZM56.1468 55.24H67.4068V58.44H56.1468V55.24ZM59.7668 59.24H63.7668V69H59.7668V59.24ZM78.3679 58.4C77.9279 58.3467 77.1546 58.2733 76.0479 58.18C75.4346 58.1533 74.9412 58.14 74.5679 58.14C74.0879 58.14 73.6346 58.1533 73.2079 58.18V55.08H73.7079C74.8012 55.08 75.9346 55.1533 77.1079 55.3C77.4812 55.3533 77.9012 55.4267 78.3679 55.52V58.4ZM75.0679 64.94C75.0679 64.66 75.0479 64.46 75.0079 64.34C74.9679 64.2067 74.9012 64.12 74.8079 64.08C74.7146 64.0267 74.5546 63.9867 74.3279 63.96L71.8679 63.66C70.4146 63.5 69.4346 63.0267 68.9279 62.24C68.7012 61.9067 68.5479 61.5 68.4679 61.02C68.3879 60.54 68.3479 59.9533 68.3479 59.26C68.3479 57.78 68.7279 56.7133 69.4879 56.06C70.1012 55.5267 71.0612 55.2133 72.3679 55.12V59.14C72.3679 59.3133 72.3746 59.46 72.3879 59.58C72.4012 59.7 72.4279 59.7933 72.4679 59.86C72.5079 59.94 72.5746 60 72.6679 60.04C72.7612 60.0667 72.9012 60.0867 73.0879 60.1L75.8479 60.44C76.4212 60.52 76.8879 60.62 77.2479 60.74C77.6079 60.86 77.9146 61.0467 78.1679 61.3C78.7679 61.9267 79.0679 63.04 79.0679 64.64C79.0679 66.3333 78.6946 67.52 77.9479 68.2C77.6146 68.5067 77.2079 68.7333 76.7279 68.88C76.2612 69.0133 75.7079 69.1 75.0679 69.14V64.94ZM74.0079 69.16C72.6746 69.16 71.4346 69.1 70.2879 68.98C69.6079 68.9133 69.0946 68.8467 68.7479 68.78V65.86C69.5346 65.9267 70.4346 65.9933 71.4479 66.06C72.0879 66.0867 72.5412 66.1 72.8079 66.1C73.5279 66.1 74.0012 66.08 74.2279 66.04V69.16H74.0079Z"
              fill="#CC0000"
            />
          </svg>

          <div
            style={{
              backgroundImage:
                "linear-gradient(90deg, rgb(121, 40, 202), rgb(255, 0, 128))",
              backgroundClip: "text",
              // '-webkit-background-clip': 'text',
              color: "transparent",
            }}
          >
            {heading}
          </div>
        </div>
      ),
      {
        ...size,
      },
    );
  } catch (error) {
    return new Response(`Failed to generate image`, {
      status: 500,
    });
  }
}
